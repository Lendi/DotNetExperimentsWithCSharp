#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace asset.datalayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AssetManagement")]
	public partial class assetDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAssetInfo(AssetInfo instance);
    partial void UpdateAssetInfo(AssetInfo instance);
    partial void DeleteAssetInfo(AssetInfo instance);
    partial void InsertRequestInfo(RequestInfo instance);
    partial void UpdateRequestInfo(RequestInfo instance);
    partial void DeleteRequestInfo(RequestInfo instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    #endregion
		
		public assetDataContext() : 
				base(global::asset.datalayer.Properties.Settings.Default.AssetManagementConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public assetDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public assetDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public assetDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public assetDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AssetInfo> AssetInfos
		{
			get
			{
				return this.GetTable<AssetInfo>();
			}
		}
		
		public System.Data.Linq.Table<RequestInfo> RequestInfos
		{
			get
			{
				return this.GetTable<RequestInfo>();
			}
		}
		
		public System.Data.Linq.Table<TransferHistory> TransferHistories
		{
			get
			{
				return this.GetTable<TransferHistory>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssetInfo")]
	public partial class AssetInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _asset_id;
		
		private string _assetname;
		
		private System.Nullable<int> _emp_id;
		
		private System.Nullable<int> _request_id;
		
		private System.Nullable<System.DateTime> _issueddate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onasset_idChanging(int value);
    partial void Onasset_idChanged();
    partial void OnassetnameChanging(string value);
    partial void OnassetnameChanged();
    partial void Onemp_idChanging(System.Nullable<int> value);
    partial void Onemp_idChanged();
    partial void Onrequest_idChanging(System.Nullable<int> value);
    partial void Onrequest_idChanged();
    partial void OnissueddateChanging(System.Nullable<System.DateTime> value);
    partial void OnissueddateChanged();
    #endregion
		
		public AssetInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_asset_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int asset_id
		{
			get
			{
				return this._asset_id;
			}
			set
			{
				if ((this._asset_id != value))
				{
					this.Onasset_idChanging(value);
					this.SendPropertyChanging();
					this._asset_id = value;
					this.SendPropertyChanged("asset_id");
					this.Onasset_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assetname", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string assetname
		{
			get
			{
				return this._assetname;
			}
			set
			{
				if ((this._assetname != value))
				{
					this.OnassetnameChanging(value);
					this.SendPropertyChanging();
					this._assetname = value;
					this.SendPropertyChanged("assetname");
					this.OnassetnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_id", DbType="Int")]
		public System.Nullable<int> emp_id
		{
			get
			{
				return this._emp_id;
			}
			set
			{
				if ((this._emp_id != value))
				{
					this.Onemp_idChanging(value);
					this.SendPropertyChanging();
					this._emp_id = value;
					this.SendPropertyChanged("emp_id");
					this.Onemp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_request_id", DbType="Int")]
		public System.Nullable<int> request_id
		{
			get
			{
				return this._request_id;
			}
			set
			{
				if ((this._request_id != value))
				{
					this.Onrequest_idChanging(value);
					this.SendPropertyChanging();
					this._request_id = value;
					this.SendPropertyChanged("request_id");
					this.Onrequest_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_issueddate", DbType="DateTime")]
		public System.Nullable<System.DateTime> issueddate
		{
			get
			{
				return this._issueddate;
			}
			set
			{
				if ((this._issueddate != value))
				{
					this.OnissueddateChanging(value);
					this.SendPropertyChanging();
					this._issueddate = value;
					this.SendPropertyChanged("issueddate");
					this.OnissueddateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestInfo")]
	public partial class RequestInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _request_id;
		
		private System.Nullable<int> _emp_id;
		
		private string _short_id;
		
		private string _asset_name;
		
		private int _manager_id;
		
		private System.Nullable<int> _request_status;
		
		private System.Nullable<System.DateTime> _request_date;
		
		private System.Nullable<System.DateTime> _manager_approved_date;
		
		private string _remarks;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onrequest_idChanging(int value);
    partial void Onrequest_idChanged();
    partial void Onemp_idChanging(System.Nullable<int> value);
    partial void Onemp_idChanged();
    partial void Onshort_idChanging(string value);
    partial void Onshort_idChanged();
    partial void Onasset_nameChanging(string value);
    partial void Onasset_nameChanged();
    partial void Onmanager_idChanging(int value);
    partial void Onmanager_idChanged();
    partial void Onrequest_statusChanging(System.Nullable<int> value);
    partial void Onrequest_statusChanged();
    partial void Onrequest_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onrequest_dateChanged();
    partial void Onmanager_approved_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onmanager_approved_dateChanged();
    partial void OnremarksChanging(string value);
    partial void OnremarksChanged();
    #endregion
		
		public RequestInfo()
		{
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_request_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int request_id
		{
			get
			{
				return this._request_id;
			}
			set
			{
				if ((this._request_id != value))
				{
					this.Onrequest_idChanging(value);
					this.SendPropertyChanging();
					this._request_id = value;
					this.SendPropertyChanged("request_id");
					this.Onrequest_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_id", DbType="Int")]
		public System.Nullable<int> emp_id
		{
			get
			{
				return this._emp_id;
			}
			set
			{
				if ((this._emp_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onemp_idChanging(value);
					this.SendPropertyChanging();
					this._emp_id = value;
					this.SendPropertyChanged("emp_id");
					this.Onemp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_short_id", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string short_id
		{
			get
			{
				return this._short_id;
			}
			set
			{
				if ((this._short_id != value))
				{
					this.Onshort_idChanging(value);
					this.SendPropertyChanging();
					this._short_id = value;
					this.SendPropertyChanged("short_id");
					this.Onshort_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_asset_name", DbType="VarChar(25)")]
		public string asset_name
		{
			get
			{
				return this._asset_name;
			}
			set
			{
				if ((this._asset_name != value))
				{
					this.Onasset_nameChanging(value);
					this.SendPropertyChanging();
					this._asset_name = value;
					this.SendPropertyChanged("asset_name");
					this.Onasset_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manager_id", DbType="Int NOT NULL")]
		public int manager_id
		{
			get
			{
				return this._manager_id;
			}
			set
			{
				if ((this._manager_id != value))
				{
					this.Onmanager_idChanging(value);
					this.SendPropertyChanging();
					this._manager_id = value;
					this.SendPropertyChanged("manager_id");
					this.Onmanager_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_request_status", DbType="Int")]
		public System.Nullable<int> request_status
		{
			get
			{
				return this._request_status;
			}
			set
			{
				if ((this._request_status != value))
				{
					this.Onrequest_statusChanging(value);
					this.SendPropertyChanging();
					this._request_status = value;
					this.SendPropertyChanged("request_status");
					this.Onrequest_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_request_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> request_date
		{
			get
			{
				return this._request_date;
			}
			set
			{
				if ((this._request_date != value))
				{
					this.Onrequest_dateChanging(value);
					this.SendPropertyChanging();
					this._request_date = value;
					this.SendPropertyChanged("request_date");
					this.Onrequest_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manager_approved_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> manager_approved_date
		{
			get
			{
				return this._manager_approved_date;
			}
			set
			{
				if ((this._manager_approved_date != value))
				{
					this.Onmanager_approved_dateChanging(value);
					this.SendPropertyChanging();
					this._manager_approved_date = value;
					this.SendPropertyChanged("manager_approved_date");
					this.Onmanager_approved_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remarks", DbType="VarChar(100)")]
		public string remarks
		{
			get
			{
				return this._remarks;
			}
			set
			{
				if ((this._remarks != value))
				{
					this.OnremarksChanging(value);
					this.SendPropertyChanging();
					this._remarks = value;
					this.SendPropertyChanged("remarks");
					this.OnremarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_RequestInfo", Storage="_user", ThisKey="emp_id", OtherKey="emp_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.RequestInfos.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.RequestInfos.Add(this);
						this._emp_id = value.emp_id;
					}
					else
					{
						this._emp_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransferHistory")]
	public partial class TransferHistory
	{
		
		private System.Nullable<int> _transfer_id;
		
		private System.Nullable<int> _from_emp_id;
		
		private System.Nullable<int> _manager_id;
		
		private System.Nullable<int> _asset_id;
		
		private string _assetname;
		
		private System.Nullable<int> _to_emp_id;
		
		private System.Data.Linq.Binary _transferdate;
		
		private System.Nullable<int> _transferstatus;
		
		private string _remarks;
		
		public TransferHistory()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transfer_id", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> transfer_id
		{
			get
			{
				return this._transfer_id;
			}
			set
			{
				if ((this._transfer_id != value))
				{
					this._transfer_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_from_emp_id", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> from_emp_id
		{
			get
			{
				return this._from_emp_id;
			}
			set
			{
				if ((this._from_emp_id != value))
				{
					this._from_emp_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manager_id", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> manager_id
		{
			get
			{
				return this._manager_id;
			}
			set
			{
				if ((this._manager_id != value))
				{
					this._manager_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_asset_id", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> asset_id
		{
			get
			{
				return this._asset_id;
			}
			set
			{
				if ((this._asset_id != value))
				{
					this._asset_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assetname", DbType="VarChar(25)", UpdateCheck=UpdateCheck.Never)]
		public string assetname
		{
			get
			{
				return this._assetname;
			}
			set
			{
				if ((this._assetname != value))
				{
					this._assetname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_to_emp_id", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> to_emp_id
		{
			get
			{
				return this._to_emp_id;
			}
			set
			{
				if ((this._to_emp_id != value))
				{
					this._to_emp_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transferdate", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary transferdate
		{
			get
			{
				return this._transferdate;
			}
			set
			{
				if ((this._transferdate != value))
				{
					this._transferdate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transferstatus", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> transferstatus
		{
			get
			{
				return this._transferstatus;
			}
			set
			{
				if ((this._transferstatus != value))
				{
					this._transferstatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remarks", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string remarks
		{
			get
			{
				return this._remarks;
			}
			set
			{
				if ((this._remarks != value))
				{
					this._remarks = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.users")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _emp_id;
		
		private string _short_id;
		
		private string _fname;
		
		private string _lname;
		
		private string _email_id;
		
		private string _user_password;
		
		private int _manager_id;
		
		private string _designation;
		
		private int _mobile;
		
		private System.Nullable<System.DateTime> _date_of_join;
		
		private string _active;
		
		private EntitySet<RequestInfo> _RequestInfos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onemp_idChanging(int value);
    partial void Onemp_idChanged();
    partial void Onshort_idChanging(string value);
    partial void Onshort_idChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnlnameChanging(string value);
    partial void OnlnameChanged();
    partial void Onemail_idChanging(string value);
    partial void Onemail_idChanged();
    partial void Onuser_passwordChanging(string value);
    partial void Onuser_passwordChanged();
    partial void Onmanager_idChanging(int value);
    partial void Onmanager_idChanged();
    partial void OndesignationChanging(string value);
    partial void OndesignationChanged();
    partial void OnmobileChanging(int value);
    partial void OnmobileChanged();
    partial void Ondate_of_joinChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_of_joinChanged();
    partial void OnactiveChanging(string value);
    partial void OnactiveChanged();
    #endregion
		
		public user()
		{
			this._RequestInfos = new EntitySet<RequestInfo>(new Action<RequestInfo>(this.attach_RequestInfos), new Action<RequestInfo>(this.detach_RequestInfos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int emp_id
		{
			get
			{
				return this._emp_id;
			}
			set
			{
				if ((this._emp_id != value))
				{
					this.Onemp_idChanging(value);
					this.SendPropertyChanging();
					this._emp_id = value;
					this.SendPropertyChanged("emp_id");
					this.Onemp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_short_id", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string short_id
		{
			get
			{
				return this._short_id;
			}
			set
			{
				if ((this._short_id != value))
				{
					this.Onshort_idChanging(value);
					this.SendPropertyChanging();
					this._short_id = value;
					this.SendPropertyChanged("short_id");
					this.Onshort_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string fname
		{
			get
			{
				return this._fname;
			}
			set
			{
				if ((this._fname != value))
				{
					this.OnfnameChanging(value);
					this.SendPropertyChanging();
					this._fname = value;
					this.SendPropertyChanged("fname");
					this.OnfnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lname", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string lname
		{
			get
			{
				return this._lname;
			}
			set
			{
				if ((this._lname != value))
				{
					this.OnlnameChanging(value);
					this.SendPropertyChanging();
					this._lname = value;
					this.SendPropertyChanged("lname");
					this.OnlnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email_id", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string email_id
		{
			get
			{
				return this._email_id;
			}
			set
			{
				if ((this._email_id != value))
				{
					this.Onemail_idChanging(value);
					this.SendPropertyChanging();
					this._email_id = value;
					this.SendPropertyChanged("email_id");
					this.Onemail_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_password", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string user_password
		{
			get
			{
				return this._user_password;
			}
			set
			{
				if ((this._user_password != value))
				{
					this.Onuser_passwordChanging(value);
					this.SendPropertyChanging();
					this._user_password = value;
					this.SendPropertyChanged("user_password");
					this.Onuser_passwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manager_id", DbType="Int NOT NULL")]
		public int manager_id
		{
			get
			{
				return this._manager_id;
			}
			set
			{
				if ((this._manager_id != value))
				{
					this.Onmanager_idChanging(value);
					this.SendPropertyChanging();
					this._manager_id = value;
					this.SendPropertyChanged("manager_id");
					this.Onmanager_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_designation", DbType="VarChar(25)")]
		public string designation
		{
			get
			{
				return this._designation;
			}
			set
			{
				if ((this._designation != value))
				{
					this.OndesignationChanging(value);
					this.SendPropertyChanging();
					this._designation = value;
					this.SendPropertyChanged("designation");
					this.OndesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobile", DbType="Int NOT NULL")]
		public int mobile
		{
			get
			{
				return this._mobile;
			}
			set
			{
				if ((this._mobile != value))
				{
					this.OnmobileChanging(value);
					this.SendPropertyChanging();
					this._mobile = value;
					this.SendPropertyChanged("mobile");
					this.OnmobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_of_join", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_of_join
		{
			get
			{
				return this._date_of_join;
			}
			set
			{
				if ((this._date_of_join != value))
				{
					this.Ondate_of_joinChanging(value);
					this.SendPropertyChanging();
					this._date_of_join = value;
					this.SendPropertyChanged("date_of_join");
					this.Ondate_of_joinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="VarChar(1)")]
		public string active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_RequestInfo", Storage="_RequestInfos", ThisKey="emp_id", OtherKey="emp_id")]
		public EntitySet<RequestInfo> RequestInfos
		{
			get
			{
				return this._RequestInfos;
			}
			set
			{
				this._RequestInfos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RequestInfos(RequestInfo entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_RequestInfos(RequestInfo entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
	}
}
#pragma warning restore 1591
